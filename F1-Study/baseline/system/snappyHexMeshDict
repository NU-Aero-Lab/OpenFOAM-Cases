/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       true;

gminlevel 7;
gmaxlevel 9;

geometry
{
    ASSY.stl
    {
        type triSurfaceMesh;
        name vehicle;

        regions
        {
            BW { name BW; }
            FLOOR { name FLOOR; }
            FW { name FW; }
            RW { name RW; }
            FLWh { name FLWh; }
            RLWh { name RLWh; }
            FRWh { name FRWh; }
            RRWh { name RRWh; }
        }
    }

    refinementBox1
    {
        type searchableBox;
        min (-8 -3 0);
        max (40 3 5);
    }

    refinementBox2
    {
        type searchableBox;
        min (-5 -2.5 0);
        max (40 2.5 3);
    }

    refinementWake
    {
        type searchableBox;
        min (3.5 -1.2 0);
        max (7 1.2 1.5);
    }

    refinementFloor
    {
        type searchableBox;
        min (-1.2 -1 0);
        max (4 1 0.275);
    }

};

// Settings for the castellatedMesh generation.
castellatedMeshControls
{

    // Refinement parameters
    maxLocalCells 30000000;
    maxGlobalCells 80000000;
    minRefinementCells 1;
    maxLoadUnbalance 0.2;
    nCellsBetweenLevels 3;
    resolveFeatureAngle 25;
    planarAngle 30;
    allowFreeStandingZoneFaces false;

    // Explicit feature edge refinement
    features
    (
        {
            file "ASSY.eMesh";
            level 5;
        }
    );

    // Surface based refinement
    refinementSurfaces
    {
        vehicle
        {
            level ($gminlevel $gmaxlevel);

            regions
            {
                BW
                {
                    level ($gminlevel $gmaxlevel);
                    patchinfo { type wall; }
                }
                FLOOR
                {
                    level (#calc "($gminlevel)+1" $gmaxlevel);
                    patchinfo { type wall; }
                }
                FW
                {
                    level (#calc "($gminlevel)+3" #calc "($gmaxlevel)+1");
                    patchinfo { type wall; }
                }
                RW
                {
                    level (#calc "($gminlevel)+3" #calc "($gmaxlevel)+1");
                    patchinfo { type wall; }
                }
                FLWh
                {
                    level ($gminlevel $gmaxlevel);
                    patchinfo { type wall; }
                }
                RLWh
                {
                    level ($gminlevel $gmaxlevel);
                    patchinfo { type wall; }
                }
                FRWh
                {
                    level ($gminlevel $gmaxlevel);
                    patchinfo { type wall; }
                }
                RRWh
                {
                    level ($gminlevel $gmaxlevel);
                    patchinfo { type wall; }
                }
            }
        }
    }

    // Region-wise refinement
    refinementRegions
    {
        refinementBox1
        {
            mode inside;   
            levels ((1 2));
        }
        refinementBox2
        {
            mode inside;   
            levels ((1 4));
        }
        refinementWake
        {
            mode inside;   
            levels ((1 8));
        }
        refinementFloor
        {
            mode inside;   
            levels ((1 8));
        }
    }

    // Mesh selection
    locationInMesh (0 0 2);
}

// Settings for the snapping.
snapControls
{
    nSmoothPatch 		    5;
    tolerance 			    2.0;
    nSolveIter 			    150;		
    nRelaxIter 			    8;
    nFeatureSnapIter 		20;		
    implicitFeatureSnap 	true;
    explicitFeatureSnap 	true;
    multiRegionFeatureSnap 	false;
}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true;

    // Layer thickness specification. This can be specified in one of following ways:
    // - expansionRatio and finalLayerThickness (cell nearest internal mesh)
    // - expansionRatio and firstLayerThickness (cell on surface)
    // - overall thickness and firstLayerThickness
    // - overall thickness and finalLayerThickness
    // - overall thickness and expansionRatio

    expansionRatio 		    1.3;
    finalLayerThickness 	0.3;
    minThickness 		    0.1;
    nGrow 0;
    nBufferCellsNoExtrude 0;
    featureAngle 180;	
    minMedianAxisAngle 75;	
    nRelaxIter 8;
    nSmoothSurfaceNormals 2;
    nSmoothNormals 5;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;
    minMedialAxisAngle 90;
    nLayerIter 50;
    nRelaxedIter 20;
    additionalReporting true;

    layers
    {
        BW
        {
            nSurfaceLayers          2;
            expansionRatio          1.3;
            finalLayerThickness     0.3;
            minThickness            0.01;
        }
        FLOOR
        {
            nSurfaceLayers          2;
            expansionRatio          1.3;
            finalLayerThickness     0.3;
            minThickness            0.01;
        }
        FW
        {
            nSurfaceLayers          3;
            expansionRatio          1.3;
            finalLayerThickness     0.3;
            minThickness            0.01;
        }
        RW
        {
            nSurfaceLayers          3;
            expansionRatio          1.3;
            finalLayerThickness     0.3;
            minThickness            0.01;
        }
        FLWh
        {
            nSurfaceLayers          2;
            expansionRatio          1.3;
            finalLayerThickness     0.3;
            minThickness            0.01;
        }
        RLWh
        {
            nSurfaceLayers          2;
            expansionRatio          1.3;
            finalLayerThickness     0.3;
            minThickness            0.01;
        }
        FRWh
        {
            nSurfaceLayers          2;
            expansionRatio          1.3;
            finalLayerThickness     0.3;
            minThickness            0.01;
        }
        RRWh
        {
            nSurfaceLayers          2;
            expansionRatio          1.3;
            finalLayerThickness     0.3;
            minThickness            0.01;
        }
    }
}

meshQualityControls
{
    #include "meshQualityDict"

    relaxed
    {
        maxNonOrtho 75; // Set to 180 to disable.
    }

    // Advanced
    nSmoothScale 4;
    errorReduction 0.75;
}

debugFlags
(
    //mesh            // write intermediate meshes
    //intersections   // write current mesh intersections as .obj files
    //featureSeeds    // write information about explicit feature edge refinement
    //attraction      // write attraction as .obj files
    //layerInfo       // write information about layers
);

writeFlags
(
    scalarLevels    // write volScalarField with cellLevel for postprocessing
    layerSets       // write cellSets, faceSets of faces in layer
    layerFields     // write volScalarField for layer coverage
);

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 0.000001;

// ************************************************************************* //
